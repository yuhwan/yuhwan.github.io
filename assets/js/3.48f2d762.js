(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{148:function(t,s,a){t.exports=a.p+"assets/img/architecture1.2b5fedce.png"},149:function(t,s,a){t.exports=a.p+"assets/img/example1.65bb6655.png"},159:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"_1-시작하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-시작하기","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 시작하기")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"node-js란"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js란","aria-hidden":"true"}},[this._v("#")]),this._v(" Node.js란?")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Node.js는 브라우저와 동일한 레벨에서 하나의 런타임 환경으로 이해하시면 됩니다. 둘 사이의 차이는 "),s("code",[this._v("브라우저는 웹 서비스를 위한 API를 제공하고, Node는 서버 개발을 위한 API를 제공")]),this._v("한다는 것입니다. 브라우저 중 크롬은 내부에서 사용하는 자바스크립트 엔진이 Node의 엔진과 동일합니다. 앞으로 설명의 편의를 위해 크롬 브라우저를 기본 브라우저라고 생각하고 설명하도록 하겠습니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",{attrs:{align:"center"}},[s("img",{attrs:{src:a(148),height:"300"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"브라우저에서-자바스크립트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#브라우저에서-자바스크립트","aria-hidden":"true"}},[this._v("#")]),this._v(" 브라우저에서 자바스크립트")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      ")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        Hello Node.JS\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",{attrs:{align:"center"}},[s("img",{attrs:{src:a(149),height:"300"}})])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("브라우저 내부에서 어떤 일이 발생한 것일까요? "),a("em",[t._v("(1)")]),t._v(" index.html 파일을 열면 브라우저는 해당 파일을 읽어 들이고, 위에서부터 차례로 실행합니다. Head 태그에 있는 스크립트를 먼저 실행하는 것이죠. "),a("em",[t._v("(2)")]),t._v(" 첫번째 줄에서, 날짜 관련 함수들을 가지고 있는 Date를 생성합니다.  "),a("em",[t._v("(3)")]),t._v(" 그 다음 "),a("code",[t._v("console.log")]),t._v(" 함수를 이용해 date를 출력합니다. "),a("em",[t._v("(4)")]),t._v(" Head에 대한 작업이 끝났으면 Body 내부를 분석해 브라우저 화면에 Hello Node.JS를 그려줍니다. 간단하게 정리하면 브라우저는 "),a("code",[t._v("index.html 파일을 읽고 코드를 한줄 한줄 실행한 것입니다.")]),t._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"노드에서-자바스크립트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#노드에서-자바스크립트","aria-hidden":"true"}},[this._v("#")]),this._v(" 노드에서 자바스크립트")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"맥에-노드-설치하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#맥에-노드-설치하기","aria-hidden":"true"}},[this._v("#")]),this._v(" 맥에 노드 설치하기")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ brew "),s("span",{attrs:{class:"token function"}},[this._v("install")]),this._v(" node\n$ node -v\n"),s("span",{attrs:{class:"token comment"}},[this._v("# v8.11.1")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"run-node-shell-repl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-node-shell-repl","aria-hidden":"true"}},[this._v("#")]),this._v(" Run Node Shell (REPL)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("설치한 Node 프로그램을 실행시켜봅시다. 터미널에 "),s("code",[this._v("node")]),this._v(" 명령어를 치면, 아래와 같이 >로 시작되는 REPL 화면을 보실 수 있습니다. REPL이란 Read-Eval-Print-Loop의 약자로 실시간으로 코드를 실행하고 그 결과가 출력되는 환경을 의미합니다. 간단하게 1 + 1를 실행시켜보시면 2가 출력되는것을 확인할 수 있습니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ node\n"),s("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v(" 1 + 1\n2\n"),s("span",{attrs:{class:"token operator"}},[this._v(">")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("브라우저 예제와 동일한 코드를 실행시켜 봅시다. 완전히 똑같은 자바스크립트 코드가 동일하게 동작하는 것을 확인할 수 있습니다. 주목할 부분은 지금 우리는 "),s("code",[this._v("자바스크립트 코드를 브라우저가 아닌 Node 환경에서 실행")]),this._v("시켰다는 것입니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" var "),a("span",{attrs:{class:"token function"}},[t._v("date")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Date"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" console.log"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n2018-06-02T02:38:06.816Z\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"자바스크립트-파일-실행하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-파일-실행하기","aria-hidden":"true"}},[this._v("#")]),this._v(" 자바스크립트 파일 실행하기")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("브라우저에서는 자바스크립트를 포함하고 있는 index.html을 실행파일로 넘겼었습니다. "),s("code",[this._v("노드 환경에서는 html, css가 필요없기 때문에 html 파일 대신 자바스크립트 파일 자체를 실행파일로 전달")]),this._v("합니다. 먼저 브라우저에서 돌렸던 스크립트와 동일한 내용의 index.js 파일을 아래처럼 만들어봅시다 (파일끝에 붙은 js는 자바스크립트를 의미합니다).")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("터미널에서 해당 파일이 저장된 곳으로 이동해서, 아래처럼 "),s("code",[this._v("node index.js")]),this._v(" 명령어를 실행해봅시다. node 뒤에 실행시키고자 하는 파일명을 입력하면 됩니다. 브라우저에서 개발자 도구와 동일하게 코드가 동작하는 것을 확인하실 수 있을 겁니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{attrs:{class:"token function"}},[this._v("ls")]),this._v("\nindex.js\n$ node index.js\n2018-06-02T02:54:16.141Z\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"npm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm","aria-hidden":"true"}},[this._v("#")]),this._v(" NPM")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{attrs:{class:"token function"}},[this._v("npm")]),this._v(" -v\n5.6.0\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"npm-init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-init","aria-hidden":"true"}},[this._v("#")]),this._v(" npm init")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("npm을 직접 사용해봅시다. 먼저, "),s("code",[this._v("mkdir node1")]),this._v(" 명령어를 통해 새롭게 시작할 프로젝트 폴더를 하나 만들어보세요. "),s("code",[this._v("cd")]),this._v(" 명령어를 통해 새롭게 만들어진 폴더 내부에 들어가서, "),s("code",[this._v("npm init")]),this._v(" 명령어를 실행해봅시다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{attrs:{class:"token function"}},[this._v("mkdir")]),this._v(" node1\n$ "),s("span",{attrs:{class:"token function"}},[this._v("cd")]),this._v(" node1\n$ "),s("span",{attrs:{class:"token function"}},[this._v("npm")]),this._v(" init\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("npm init")]),this._v(" 명령어는 해당 폴더를 Node 프로젝트로 초기화(Initialize)하는 작업을 수행합니다. 처음 "),s("code",[this._v("npm init")]),this._v(" 명령어를 실행하면 몇가지 질문들을 던질텐데 각 질문에 맞춰서 답을 하거나 기본값을 사용하려면 엔터를 입력하면 됩니다. 한가지 팁을 드리자면 y 옵션으로 npm init을 실행하면, "),s("code",[this._v("npm init -y")]),this._v(", npm이 기본값으로 해당 질문에 대한 값을 설정합니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{attrs:{class:"token function"}},[t._v("npm")]),t._v(" init\npackage name: "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nversion: "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\ndescription: "),a("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("프로젝트를 초기화한다고해서 매우 거창한 일을 하는것처럼 보이지만, 사실 "),s("code",[this._v("package.json")]),this._v(" 이라는 파일을 하나 만드는 작업을 할 뿐입니다. 특정한 필드를 포함하고 있는 이 package.json 파일이 루트에 있는 폴더는 하나의 Node 프로젝트라고 할 수 있는 것입니다. 앞으로 여러분이 개발을 하면서, 다양한 이유로 npm 명령어를 사용할때마다 npm은 바로 이 package.json 파일을 찾아서 그 안에 들어있는 값을 참고할 것입니다. 각 필드가 어떤 역할을 하는지 궁금하시겠지만 자세한 내용은 후에 다루도록 하겠습니다. 지금은 "),s("code",[this._v("ls")]),this._v(" 명령어로 "),s("code",[this._v("package.json")]),this._v(" 파일이 잘 만들어졌는지만 확인해보세요.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{attrs:{class:"token function"}},[this._v("ls")]),this._v("\npackage.json\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"npm-install"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-install","aria-hidden":"true"}},[this._v("#")]),this._v(" npm install")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("npm install")]),this._v(" 명령어 을 통해서 third-party 라이브러리를 설치해봅시다. 위에서 사용했던 현재 시간을 찍는 프로그램을 다시 한번 떠올려 봅시다. 현재 시간을 찍기 위해서 아래와 같이 프로그램을 작성했었습니다. 이제 이 프로그램을 조금 더 발전시켜서 연-월-일(YYYY-MM-DD)형태로 날짜를 출력해봅시다. 자바스크립트가 기본으로 제공하는 Date는 다양한 함수를 제공합니다. 그 중에서도 연, 월, 일을 리턴하는 함수가 있는데요. 아래와 같이 프로그램을 작성하면 오늘의 날짜를 출력할 수 있습니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" year "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" month "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" day "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getDay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("year "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" month "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" day"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2018")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" year "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" month "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" day "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" date"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getDay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("month "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" month "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" month"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("day "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" day "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" day"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("year "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" month "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" day"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2018")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("06")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("02")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("moment 홈페이지에 접속하면 설치 방법이 나와있습니다. 바로 "),a("code",[t._v("npm install moment")]),t._v("만 치면 됩니다. 주의해야할 점은 해당 명령어를 반드시 "),a("code",[t._v("npm init")]),t._v("이 완료된, 즉 package.json이 존재하는 폴더 내부에서 실행해야한다는 것입니다. "),a("code",[t._v("npm install moment")]),t._v(" 명령어를 실행시키고 나면, 이전에 없었던 "),a("code",[t._v("node_modules")]),t._v(" 폴더가 만들어진것을 확인할 수 있습니다. 이 폴더는 npm을 통해 설치된 라이브러리 파일들이 모두 저장되는 폴더라고 생각하시면 됩니다. 실제로 내부를 살펴보면 우리가 방금 설치한 moment가 존재하는 것을 확인할 수 있습니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{attrs:{class:"token function"}},[this._v("ls")]),this._v("\nnode_modules   package.json\n$ "),s("span",{attrs:{class:"token function"}},[this._v("ls")]),this._v(" node_modules\nmoment\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"설치한-패키지-사용하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설치한-패키지-사용하기","aria-hidden":"true"}},[this._v("#")]),this._v(" 설치한 패키지 사용하기")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("moment를 이용해서 간단하게 오늘의 날짜를 출력해 봅시다. 폴더에 "),s("code",[this._v("index.js")]),this._v(" 파일을 만들고 아래와 같이 코드를 입력하세요. "),s("code",[this._v("node index.js")]),this._v(" 명령어를 통해 실행해보면 오늘의 날짜가 출력되는 것을 확인할 수 있습니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moment "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'moment'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" today "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("moment")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'YYYY-MM-DD'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("today"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("위에서 눈길을 끄는 것은 "),a("code",[t._v("require")]),t._v("라는 함수일 겁니다. "),a("code",[t._v("require")]),t._v("는 Node가 기본으로 제공하는 함수 중 하나로 "),a("code",[t._v("npm install")]),t._v("을 통해 설치한 패키지를 불러온다고 생각하시면 됩니다. 앞으로 여러분이 작성하는 대부분의 Node 코드의 맨 위에는 "),a("code",[t._v("require")]),t._v("를 통해 필요한 라이브러리를 가져오는것부터 시작할 것입니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moment "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'moment'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tomorrow "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("moment")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("add")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'day'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("format")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'YYYY-MM-DD'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tomorrow"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"save-save-dev-global"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#save-save-dev-global","aria-hidden":"true"}},[this._v("#")]),this._v(" save, save-dev, global")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("여러분이 위에서 "),s("code",[this._v("npm install moment")]),this._v(" 명령어를 실행시켰을때 package.json 에 변화가 있었습니다. 바로 depedencies라는 필드가 새로 생기고, 그 안에 설치된 moment의 버전 정보가 추가된 것입니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token property"}},[t._v('"dependencies"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"moment"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"^2.22.2"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("이렇게 package.json 파일에는 Node 프로젝트에서 필요한 라이브러리들과 해당 라이브러리의 버전이 기록되게 됩니다. "),a("code",[t._v("package.json")]),t._v(" 파일은 해당 프로젝트가 어떤 버전의 라이브러리를 사용하는지를 기억합니다. 만약 실수로 "),a("code",[t._v("node_modules")]),t._v(" 폴더를 지워버리더라도 간단하게 "),a("code",[t._v("npm install")]),t._v(" 명령어만 실행시키면 라이브러리들이 복구가 됩니다. 일반적으로 "),a("code",[t._v("node_modules")]),t._v(" 폴더는 굉장히 크기가 큽니다. 이 때문에 서버에 코드를 릴리즈하거나 버전 관리 도구에 추가할때 "),a("code",[t._v("node_modules")]),t._v(" 폴더를 제외하고 진행하게 됩니다. 그리고 나중에 릴리즈된 서버에서는 "),a("code",[t._v("package.json")]),t._v(" 파일만 가지고 "),a("code",[t._v("npm install")]),t._v(" 명령어로 필요한 라이브러리를 재설치하는 방식을 보통 사용합니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#save","aria-hidden":"true"}},[this._v("#")]),this._v(" save")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("지금부터는 "),s("code",[this._v("npm install")]),this._v("이 제공하는 몇가지 옵션들에 대해서 알아보고자 합니다. "),s("code",[this._v("npm install moment --save")]),this._v("는 package.json  내부에 dependencies 필드에 해당 라이브러리 정보를 추가하라는 옵션입니다. 현재 npm install은 save 옵션을 기본값으로 사용하고 있기 때문에, 위에서 save 옵션을 주지 않았어도 자동으로 dependencies에 추가된 것을 확인할 수 있습니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"save-dev"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#save-dev","aria-hidden":"true"}},[this._v("#")]),this._v(" save-dev")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("npm install underscore --save-dev")]),t._v("는 save 옵션과 달리 package.json의 "),a("code",[t._v("devDependencies")]),t._v(" 필드에 해당 라이브러리의 정보를 저장합니다. 테스트를 위해 사용하는 라이브러리와 같이 개발환경에서만 사용하는 라이브러리들은 프로덕션 환경에서는 설치할 이유가 없기 때문에 구분하고자 제공되는 옵션입니다. package.json에 기록된 패키지를 설치할 때, "),a("code",[t._v("npm install")]),t._v(" 대신 "),a("code",[t._v("npm install --production")]),t._v(" 명령어를 실행시키면 "),a("code",[t._v("devDependencies")]),t._v("에 기록되어있는 패키지는 제외하고 설치하게 됩니다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token property"}},[t._v('"devDependencies"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"underscore"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"^1.9.1"')]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"global"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#global","aria-hidden":"true"}},[this._v("#")]),this._v(" global")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("npm install json-server --global")]),t._v("은 Node 프로젝트 레벨이 아닌 시스템 레벨에 라이브러리를 설치하는 역할을 수행합니다. 다시 말해, "),a("code",[t._v("npm init")]),t._v("을 통해 초기화 시켜 놓은 폴더 내부의 "),a("code",[t._v("node_modules")]),t._v(" 폴더가 아닌 다른 곳에 라이브러리를 설치합니다. 이렇게 설치된 패키지는 시스템 내부의 모든 Node에서 접근 가능하게 됩니다. 위처럼 "),a("code",[t._v("json-server")]),t._v("를 글로벌로 설치하면 모든 프로젝트의 js파일 내부에서 "),a("code",[t._v("require('json-server')")]),t._v("를 실행하면 동작합니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("여기에서는 예제로 http-server를 global로 설치한후 실행해보겠습니다. 이 강의 처음에 브라우저로 자바스크립트를 실행했던 index.html 파일을 기억하실 겁니다. 이 파일을 브라우저로 드래그 앤 드랍해서 여는 대신, "),s("code",[this._v("http://localhost:8080")]),this._v(" 주소로 접속하면 해당 파일이 열리도록 해보겠습니다. 먼저, index.html 파일을 다시 한번 만들어 봅시다.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      ")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        Hello http-server\n    "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("이제 http-server를 global 옵션으로 시스템에 설치하고 실행시켜 봅시다. 브라우저를 열고 "),s("code",[this._v("http://localhost:8080")]),this._v(" 주소를 입력하면 html 파일이 실행되는것을 확인하실 수 있을 겁니다.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("$ "),s("span",{attrs:{class:"token function"}},[this._v("npm")]),this._v(" "),s("span",{attrs:{class:"token function"}},[this._v("install")]),this._v(" http-server --global\n$ http-server\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"숙제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#숙제","aria-hidden":"true"}},[this._v("#")]),this._v(" 숙제")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("moment-timezone을 이용해서 한국시간과 미국시간을 찍는 프로그램을 작성하세요.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("Asia/Seoul: 2018-06-06 07:56:23\nAmerica/NewYork: 2018-06-05 18:56:23\n")])])])}],e=a(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._m(1),a("p",[a("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),a("OutboundLink")],1),t._v("는 자바스크립트를 동작시키는 "),a("code",[t._v("런타임 환경")]),t._v("입니다. 다시 말해, Node는 자바스크립트 언어로 작성된 프로그램을 실행시키 위한 모든 것들을 포함하고 있습니다. 초기 자바스크립트는 HTML, CSS와 함께 브라우저 상에서 웹 개발만을 위해 만들어졌습니다. 크롬, 인터넷 익스플로러와 같은 웹 브라우저에서만 사용되던 "),a("code",[t._v("자바스크립트 언어를 서버 개발에 사용하고자")]),t._v(" 만든것이 바로 Node.js 입니다.")]),a("p",[t._v("여기에서 "),a("code",[t._v("서버 개발에 사용한다")]),t._v("라는 말은 서버 개발에 필요한 라이브러리를 제공한다는 이야기입니다. 예를 들어, 서버 개발에서 필수적인 기능 중 하나로 파일을 읽고 쓰는 기능이 있습니다. 브라우저에서 자바스크립트를 사용할 때에는 이 기능이 필요 없었습니다. 게다가 보안상의 이유로 브라우저가 이러한 기능을 자바스크립트에 제공할 이유가 없었습니다. 하지만, 서버 개발에 있어서는 필수적이기에 Node.js는 이런 기능을 "),a("a",{attrs:{href:"https://nodejs.org/api/fs.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 형태"),a("OutboundLink")],1),t._v("로 제공하는것입니다.")]),t._m(2),t._m(3),t._m(4),a("p",[t._v("Node로 자바스크립트 코드를 실행시켜보기 전에, 브라우저에서 간단한 자바스크립트 코드를 실행시켜봅시다. 브라우저에서 자바스크립트 파일을 실행시키는 가장 일반적인 방법은 자바스크립트를 포함하고 있는 HTML 파일을 브라우저에서 로딩하는 것입니다.")]),a("p",[t._v("먼저 아주 간단한 HTML 파일을 작성해봅시다. "),a("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("VS Code"),a("OutboundLink")],1),t._v("를 실행시킨 후, 아래 처럼 index.html 파일을 만드세요.")]),t._m(5),a("p",[t._v("크롬 브라우저를 실행시키고 index.html 파일을 열면 다음과 같은 화면을 보실 수 있습니다. 크롬의 개발자 도구는 크롬 내부에서 실행된 자바스크립트의 결과를 보여줍니다. 자바스크립트의 실행결과를 보기 위해 Option(⌥) + Command(⌘) + I 를 눌러서 개발자 도구를 실행해봅시다. 현재 시간이 찍힌것을 확인하실 수 있을 겁니다.")]),t._m(6),t._m(7),t._m(8),a("p",[t._v("Node를 이용해 자바스크립트 프로그램을 실행시켜 봅시다. 여러분 모두 컴퓨터에 기본적으로 브라우저 하나는 설치 되어있을것이기 때문에 위에서는 브라우저 설치관련 이야기를 하지 않았습니다. 하지만, Node는 기본으로 설치되어있지 않기 때문에 설치를 먼저해야합니다.")]),t._m(9),a("p",[t._v("물론 "),a("a",{attrs:{href:"http://blog.teamtreehouse.com/install-node-js-npm-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("윈도우 환경에서도 Node를 설치"),a("OutboundLink")],1),t._v("할 수 있지만, 이곳에서는 맥 환경에서 설치하는 것에 대해서만 다루겠습니다. 맥은 소프트웨어를 설치하는 강력한 프로그램인 "),a("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Homebrew"),a("OutboundLink")],1),t._v("를 가지고 있습니다. Node 역시 Homebrew를 이용해 아주 간단히 설치 할 수 있습니다. 터미널 프로그램을 실행시키고 아래 명령어를 실행시키세요.")]),t._m(10),a("p",[t._v("터미널에 node 버전 (v8.11.1)이 보인다면 설치가 성공적으로 끝난것입니다. 다른 버전이 보이더라도 문제는 없습니다. 나중에 노드 버전을 관리하는 방법은 다루도록 하겠습니다.")]),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),a("p",[t._v("REPL은 간단하게 Node를 테스팅하고 실행하는데 매우 유용합니다. 하지만, 실제로 코드를 작성할때에는 파일로 자바스크립트 코드를 만들고 이를 실행할 것입니다. 지금부터 이 작업을 시작해보도록 합시다.")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),a("p",[t._v("지금까지 자바스크립트 프로그램을 Node를 이용해 실행해보았습니다. 아직 아주 간단한 파일 하나를 돌려서 Node의 강력함을 느낄 수 는 없겠지만, 더 이상 Node가 대단한 사람들만 알고있는 신비한 물건이라는 느낌이 사라졌을것이라고 믿습니다.")]),t._m(21),a("p",[t._v("Homebrew를 이용해 Node를 설치했을때, 우리가 모르는 사이 추가로 설치된 프로그램이 있습니다. 바로 "),a("code",[t._v("npm - Node Package Manager")]),t._v("입니다. npm은 노드에서 활용할 수 있는 라이브러리를 설치하는 역할을 담당합니다. Python의 pip, Ruby에서의 RubyGems, PHP의 Packagist, Perl의 CPAN과 같은 역할이라 생각하시면 됩니다. "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm"),a("OutboundLink")],1),t._v("은 엄청나게 다양한 패키지를 보유하고 있습니다. 따라서 여러분이 만들고 싶은 프로그램의 핵심 로직만을 고민하고, 그 외의 기능들은 다른 개발자들이 만들어놓은 패키지를 사용하면 됩니다.")]),a("p",[t._v("이제 npm을 사용해봅시다. 먼저, 여러분의 컴퓨터에 잘 설치되어있지 아래 커맨드를 실행해서 확인해보세요.")]),t._m(22),t._m(23),t._m(24),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),t._m(31),t._m(32),a("p",[t._v("날짜가 출력은 되었지만, 저희가 원하는 형태인 YYYY-MM-DD 형태가 아닌것을 알 수 있습니다. 여기에 조금 더 추가해서 month와 day가 10 미만이면 앞에 0을 붙이는 코드를 작성해봅시다.")]),t._m(33),a("p",[t._v("만족하시나요? 원하는 답을 얻은 것 같지만, 복잡하기도 하고 프로그램이 한계를 가지고 있기도 합니다. 예를 들어, month에 1을 더해서 다음달 데이터를 얻고 싶다고 해봅시다. month를 이미 스트링 형태로 만들어버렸기 때문에, 다시 숫자로 변환해야 할 것입니다. 게다가, 만약 해당 달이 9월이었다면, 다음달은 10월이기 때문에 앞에 0을 붙이면 안됩니다. 이렇게 아주 흔하게 존재하는 문제들을 기존의 개발자들이 해결해 놓은 것이 바로 라이브러리입니다. Node에서는 "),a("a",{attrs:{href:"https://momentjs.com/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("moment.js"),a("OutboundLink")],1),t._v("라는 날짜를 다루는데 특화되어있는 라이브러리가 있습니다. moment를 사용해서 오늘의 날짜를 YYYY-MM-DD로 출력해봅시다.")]),t._m(34),t._m(35),t._m(36),t._m(37),t._m(38),t._m(39),a("p",[t._v("다시 예제로 돌아가서, 얼마나 moment가 코드를 간편하게 만들어주시는지 느껴지시나요? moment는 "),a("a",{attrs:{href:"https://momentjs.com/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("강력한 함수"),a("OutboundLink")],1),t._v("들을 제공하고 있습니다. 여러분이 하나 하나 구현한 필요없이 날씨 관련된 모든 것은 moment를 이용해서 코드를 작성하면 됩니다. 내일 날짜를 구하는 코드를 간단하게 작성해봅시다.")]),t._m(40),t._m(41),t._m(42),t._m(43),t._m(44),t._m(45),t._m(46),t._m(47),t._m(48),t._m(49),t._m(50),t._m(51),a("p",[t._v("하지만, 보통 global을 Node 프로젝트 레벨에서 사용하는것은 좋지 않은 습관입니다. save 옵션에서도 이야기했지만, 프로덕션환경에 릴리즈했을때 어떤 라이브러리가 코드 내에서 사용되고 있는지 추적이 불가능할 뿐더러, 라이브러리의 버전 관리도 매우 어려워지기 때문입니다.")]),a("p",[t._v("global 옵션이 유용한 상황은 Node 프로젝트에서 라이브러리를 사용할때가 아닌, "),a("code",[t._v("Node로 만들어진 시스템 프로그램을 설치해서 사용")]),t._v("할 때 입니다. Node로 작성된 유용한 프로그램들이 많이 존재합니다. 대표적인 예로, JSON 파일을 전달하면 Fake 서버를 만들어 주는 "),a("a",{attrs:{href:"https://github.com/typicode/json-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("json-server"),a("OutboundLink")],1),t._v(", 아무런 설정을 하지 않고도 http-server를 실행시킬 수 있는 "),a("a",{attrs:{href:"https://github.com/indexzero/http-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("http-server"),a("OutboundLink")],1),t._v(" 등이 있습니다.")]),t._m(52),t._m(53),t._m(54),t._m(55),t._m(56),t._m(57),t._m(58)])},n,!1,null,null,null);s.default=r.exports}}]);